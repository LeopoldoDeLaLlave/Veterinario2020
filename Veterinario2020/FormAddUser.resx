<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        J0qGXQvRXhzAAAAAAElFTkSuQmCC
</value>
  </data>
</root>